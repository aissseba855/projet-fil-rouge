# Définit la version de la syntaxe Docker Compose utilisée.
version: '3'
 # Section définissant les services Docker à exécuter.
services:
# Définit le service PHP.
   php:
   # Utilise l'image Docker PHP 8.2 avec Apache.
      image: php:8.2-apache
    #Nomme le conteneur PHP comme 'php82'.
      container_name: php82
    # Configure les ports du conteneur.Mappe le port 8080 de l'hôte au port 80 du conteneur.
      ports:
      - 80:80
    # Montre les volumes du conteneur.  
      volumes:
    #Montre le répertoire local 'projectProfil' au répertoire '/var/www/html' dans le conteneur.
      - ./projectProfil:/var/www/html
   

# Définit le service de base de données.
   db:
      # Utilise l'image Docker MySQL 8.0.
      image: mysql:8.0
       # Nomme le conteneur MySQL comme 'mysql8'.
      container_name: mysql8
      #Elle configure le plugin d'authentification par défaut sur "mysql_native_password". 
      #Ce plugin est utilisé pour l'authentification des utilisateurs lors de la connexion à la base de données MySQL.
      command: --default-authentication-plugin=mysql_native_password
      volumes:
# Montre le fichier SQL local au répertoire d'initialisation de la base de données du conteneur.
      - ./projectProfil/profil_infos.sql:/docker-entrypoint-initdb.d/profil_infos.sql

      environment: 
         MYSQL_ROOT_PASSWORD: pass
          # Nom de la base de données.
         MYSQL_DATABASE: demo
          # Nom d'utilisateur MySQL.
         MYSQL_USER: test
         # Mot de passe de l'utilisateur MySQL.
         MYSQL_PASSWORD: pass
      # Configure les ports du conteneur.
      ports:
          # Mappe le port 3308 de l'hôte au port 3306 du conteneur.
         - 3308:3306
